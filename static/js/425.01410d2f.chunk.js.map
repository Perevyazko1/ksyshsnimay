{"version":3,"file":"static/js/425.01410d2f.chunk.js","mappings":"wNACA,EAA4B,6BAA5B,EAAwE,gCAAxE,EAAgH,yB,oCCwEhH,GA7DkBA,EAAAA,EAAAA,OAAK,SAACC,GACpB,IAAAC,EAAiCC,EAAAA,EAAQC,gBAAgB,CAACC,MAAM,GAAGC,OAAO,cAAnEC,EAAIL,EAAJK,KACPC,GADsBN,EAATO,UAAgBP,EAALQ,OACUC,EAAAA,EAAAA,UAAwB,OAAKC,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAEzDM,GAFUF,EAAA,GAAcA,EAAA,IAEZG,EAAAA,EAAAA,QAA2B,KAwBzCC,EAGAf,EAHAe,UACAC,EAEAhB,EAFAgB,SACGC,GAAUC,EAAAA,EAAAA,GACblB,EAAKmB,GAMT,OACIC,EAAAA,EAAAA,MAAA,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACIN,WAAWO,EAAAA,EAAAA,GAAWC,EANX,CAEnB,EAImD,CAACR,KACxCE,GAAU,IAAAD,SAAA,CACjB,OACIV,GAAQA,EAAKkB,KAAI,SAACC,EAAMC,GAAK,OAC5BC,EAAAA,EAAAA,KAAA,OACKZ,UAAWQ,EAAiBP,UAC7BW,EAAAA,EAAAA,KAAA,SACIZ,UAAWQ,EACXK,IAAKH,EAAKI,MACVC,IAAK,SAACC,GACFA,IAAIlB,EAAUmB,QAAQN,GAASK,EACrC,EACRE,aAAc,kBA7CC,SAACP,GACxB,GAAIb,EAAUmB,QAAQN,GAAQ,CAC5B,IAAMG,EAAQhB,EAAUmB,QAAQN,GAC5BG,IACFA,EAAMK,OAAQ,EACdL,EAAMM,OAEV,CACF,CAqC8BC,CAAiBV,EAAM,EAC3CW,aAAc,kBApCC,SAACX,GACxB,GAAIb,EAAUmB,QAAQN,GAAQ,CAC5B,IAAMG,EAAQhB,EAAUmB,QAAQN,GAC5BG,IACFA,EAAMK,OAAQ,EACdL,EAAMS,YAAY,EAEtB,CACF,CA4B8BC,CAAiBb,EAAM,KAT/BA,EAWJ,IAGPV,KAGb,G","sources":["webpack://newksyshev/./src/pages/VideoPage/ui/VideoPage.module.scss?fd73","pages/VideoPage/ui/VideoPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"VideoPage\":\"VideoPage_VideoPage__m-FqI\",\"WrapperVideo\":\"VideoPage_WrapperVideo__hypyn\",\"Video\":\"VideoPage_Video__RAMJU\"};","import {memo, ReactNode, useRef, useState} from 'react';\nimport {classNames, Mods} from \"shared/lib/classNames/classNames\";\nimport AudioPlayer from \"../../../features/player/player\";\nimport {postApi} from \"../../../providers/api/RtkService\";\nimport cls from \"./VideoPage.module.scss\";\n\ninterface VideoPageProps {\n    className?: string\n    children?: ReactNode\n}\n\n\nconst VideoPage = memo((props: VideoPageProps) => {\n    const {data, isLoading, error} = postApi.useGetDataQuery({param:\"\",source:\"api-video\"})\n    const [isHovered, setIsHovered] = useState<number | null>(null);\n\n    const videoRefs = useRef<HTMLVideoElement[]>([]);\n\n  const handleMouseEnter = (index: number) => {\n    if (videoRefs.current[index]) {\n      const video = videoRefs.current[index];\n      if (video) {\n        video.muted = true;\n        video.play();\n      }\n    }\n  };\n\n  const handleMouseLeave = (index: number) => {\n    if (videoRefs.current[index]) {\n      const video = videoRefs.current[index];\n      if (video) {\n        video.muted = false;\n        video.currentTime=0\n      }\n    }\n  };\n\n\n    const {\n        className,\n        children,\n        ...otherProps\n    } = props\n\n    const mods: Mods = {\n\n    };\n\n    return (\n        <div\n            className={classNames(cls.VideoPage, mods, [className])}\n            {...otherProps}\n        >1234\n            {data && data.map((item, index) => (\n              <div key={index}\n                   className={cls.WrapperVideo}>\n                  <video\n                      className={cls.Video}\n                      src={item.video}\n                      ref={(el) => {\n                      if (el) videoRefs.current[index] = el;\n                    }}\n            onMouseEnter={() => handleMouseEnter(index)}\n            onMouseLeave={() => handleMouseLeave(index)}\n                  />\n              </div>\n            ))}\n\n            {children}\n        </div>\n    );\n});\nexport default VideoPage"],"names":["memo","props","_postApi$useGetDataQu","postApi","useGetDataQuery","param","source","data","_useState","isLoading","error","useState","_useState2","_slicedToArray","videoRefs","useRef","className","children","otherProps","_objectWithoutProperties","_excluded","_jsxs","_objectSpread","classNames","cls","map","item","index","_jsx","src","video","ref","el","current","onMouseEnter","muted","play","handleMouseEnter","onMouseLeave","currentTime","handleMouseLeave"],"sourceRoot":""}
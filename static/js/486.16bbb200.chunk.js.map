{"version":3,"file":"static/js/486.16bbb200.chunk.js","mappings":"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","sources":["webpack://newksyshev/./src/pages/PhotoPage/ui/PhotoPage.module.scss?0f7f","../node_modules/react-loading-skeleton/dist/index.js","pages/PhotoPage/ui/PhotoPage.tsx","shared/hooks/useWindowWidth/useWindowWidth.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"PhotoPage\":\"PhotoPage_PhotoPage__P5UIV\",\"WrapperPhoto\":\"PhotoPage_WrapperPhoto__AZruh\",\"Photo\":\"PhotoPage_Photo__2b8op\",\"PhotoHovered\":\"PhotoPage_PhotoHovered__DYSgc\"};","'use client';\nimport React from 'react';\n\n/**\n * @internal\n */\nconst SkeletonThemeContext = React.createContext({});\n\n/* eslint-disable react/no-array-index-key */\nconst defaultEnableAnimation = true;\n// For performance & cleanliness, don't add any inline styles unless we have to\nfunction styleOptionsToCssProperties({ baseColor, highlightColor, width, height, borderRadius, circle, direction, duration, enableAnimation = defaultEnableAnimation, }) {\n    const style = {};\n    if (direction === 'rtl')\n        style['--animation-direction'] = 'reverse';\n    if (typeof duration === 'number')\n        style['--animation-duration'] = `${duration}s`;\n    if (!enableAnimation)\n        style['--pseudo-element-display'] = 'none';\n    if (typeof width === 'string' || typeof width === 'number')\n        style.width = width;\n    if (typeof height === 'string' || typeof height === 'number')\n        style.height = height;\n    if (typeof borderRadius === 'string' || typeof borderRadius === 'number')\n        style.borderRadius = borderRadius;\n    if (circle)\n        style.borderRadius = '50%';\n    if (typeof baseColor !== 'undefined')\n        style['--base-color'] = baseColor;\n    if (typeof highlightColor !== 'undefined')\n        style['--highlight-color'] = highlightColor;\n    return style;\n}\nfunction Skeleton({ count = 1, wrapper: Wrapper, className: customClassName, containerClassName, containerTestId, circle = false, style: styleProp, ...originalPropsStyleOptions }) {\n    var _a, _b, _c;\n    const contextStyleOptions = React.useContext(SkeletonThemeContext);\n    const propsStyleOptions = { ...originalPropsStyleOptions };\n    // DO NOT overwrite style options from the context if `propsStyleOptions`\n    // has properties explicity set to undefined\n    for (const [key, value] of Object.entries(originalPropsStyleOptions)) {\n        if (typeof value === 'undefined') {\n            delete propsStyleOptions[key];\n        }\n    }\n    // Props take priority over context\n    const styleOptions = {\n        ...contextStyleOptions,\n        ...propsStyleOptions,\n        circle,\n    };\n    // `styleProp` has the least priority out of everything\n    const style = {\n        ...styleProp,\n        ...styleOptionsToCssProperties(styleOptions),\n    };\n    let className = 'react-loading-skeleton';\n    if (customClassName)\n        className += ` ${customClassName}`;\n    const inline = (_a = styleOptions.inline) !== null && _a !== void 0 ? _a : false;\n    const elements = [];\n    const countCeil = Math.ceil(count);\n    for (let i = 0; i < countCeil; i++) {\n        let thisStyle = style;\n        if (countCeil > count && i === countCeil - 1) {\n            // count is not an integer and we've reached the last iteration of\n            // the loop, so add a \"fractional\" skeleton.\n            //\n            // For example, if count is 3.5, we've already added 3 full\n            // skeletons, so now we add one more skeleton that is 0.5 times the\n            // original width.\n            const width = (_b = thisStyle.width) !== null && _b !== void 0 ? _b : '100%'; // 100% is the default since that's what's in the CSS\n            const fractionalPart = count % 1;\n            const fractionalWidth = typeof width === 'number'\n                ? width * fractionalPart\n                : `calc(${width} * ${fractionalPart})`;\n            thisStyle = { ...thisStyle, width: fractionalWidth };\n        }\n        const skeletonSpan = (React.createElement(\"span\", { className: className, style: thisStyle, key: i }, \"\\u200C\"));\n        if (inline) {\n            elements.push(skeletonSpan);\n        }\n        else {\n            // Without the <br />, the skeleton lines will all run together if\n            // `width` is specified\n            elements.push(React.createElement(React.Fragment, { key: i },\n                skeletonSpan,\n                React.createElement(\"br\", null)));\n        }\n    }\n    return (React.createElement(\"span\", { className: containerClassName, \"data-testid\": containerTestId, \"aria-live\": \"polite\", \"aria-busy\": (_c = styleOptions.enableAnimation) !== null && _c !== void 0 ? _c : defaultEnableAnimation }, Wrapper\n        ? elements.map((el, i) => React.createElement(Wrapper, { key: i }, el))\n        : elements));\n}\n\nfunction SkeletonTheme({ children, ...styleOptions }) {\n    return (React.createElement(SkeletonThemeContext.Provider, { value: styleOptions }, children));\n}\n\nexport { SkeletonTheme, Skeleton as default };\n","import {memo, ReactNode, useState} from 'react';\nimport {classNames, Mods} from \"shared/lib/classNames/classNames\";\nimport {postApi} from \"../../../providers/api/RtkService\";\nimport cls from \"./PhotoPage.module.scss\"\nimport {useWindowWidth} from \"shared/hooks/useWindowWidth/useWindowWidth\";\nimport Skeleton from 'react-loading-skeleton';\n\ninterface PhotoPageProps {\n    className?: string\n    children?: ReactNode\n}\n\n\nconst PhotoPage = memo((props: PhotoPageProps) => {\n\n    const {data, isLoading, error} = postApi.useGetDataQuery({param:\"\",source:\"api-photo\"})\n    const [isHovered, setIsHovered] = useState<number | null>(null);\n    const [isLoaded, setIsLoaded] = useState<number | null>(null);\n    const [loadedIndexes, setLoadedIndexes] = useState<number[]>([]);\n    const pageWidth = useWindowWidth();\n    console.log(data)\n    console.log(\"проверка\")\n\n\n      const [hoveredIndex, setHoveredIndex] = useState<number>(-1);\n\nconst handleRowHover = (index: number) => {\n  if (!('ontouchstart' in window)) {\n    // Обработка наведения курсора на десктопных устройствах\n    setHoveredIndex(index);\n  }\n};\n\nconst handleRowLeave = () => {\n  if (!('ontouchstart' in window)) {\n    // Обработка покидания курсора с элемента на десктопных устройствах\n    setHoveredIndex(-1);\n  }\n};\n\n\n    const {\n        className,\n        children,\n        ...otherProps\n    } = props\n\n    const mods: Mods = {\n\n    };\n\n    return (\n        <div\n            className={classNames(cls.PhotoPage, mods, [className])}\n            {...otherProps}\n        >\n\n            {data? data.map((item,index) => (\n                <div\n                    className={cls.WrapperPhoto}\n                    key={index}\n                >\n\n                    {loadedIndexes.includes(index)?\n                        <Skeleton width={313} height={393} />:\n\n                        <img\n                          className={(isHovered === index || hoveredIndex === index) ? cls.Photo : cls.PhotoHovered}\n                          onMouseEnter={() => handleRowHover(index)}\n                          onMouseLeave={handleRowLeave}\n                          onTouchStart={() => handleRowHover(index)}\n                          onTouchEnd={handleRowLeave}\n                          onLoad={() => setLoadedIndexes(prevIndexes => [...prevIndexes, index])}\n                          src={item.image}\n                        />\n\n                    }\n\n\n                </div>\n            )):<Skeleton width={313} height={393} />}\n\n            {children}\n        </div>\n    );\n});\n\nexport default PhotoPage","import { useState, useEffect } from 'react';\n\nexport function useWindowWidth() {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  useEffect(() => {\n    const handleResize = () => setWindowWidth(window.innerWidth);\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  return windowWidth;\n}"],"names":["_excluded","SkeletonThemeContext","React","defaultEnableAnimation","Skeleton","_ref2","_a","_b","_c","_ref2$count","count","Wrapper","wrapper","customClassName","className","containerClassName","containerTestId","_ref2$circle","circle","styleProp","style","originalPropsStyleOptions","_objectWithoutProperties","contextStyleOptions","propsStyleOptions","_objectSpread","_i","_Object$entries","Object","entries","length","_Object$entries$_i","_slicedToArray","key","styleOptions","_ref","baseColor","highlightColor","width","height","borderRadius","direction","duration","_ref$enableAnimation","enableAnimation","concat","styleOptionsToCssProperties","inline","elements","countCeil","Math","ceil","i","thisStyle","fractionalPart","fractionalWidth","skeletonSpan","push","map","el","memo","props","_postApi$useGetDataQu","postApi","useGetDataQuery","param","source","data","_useState","isLoading","error","useState","_useState2","isHovered","_useState3","_useState4","_useState5","_useState6","loadedIndexes","setLoadedIndexes","window","innerWidth","windowWidth","setWindowWidth","useEffect","handleResize","addEventListener","removeEventListener","useWindowWidth","console","log","_useState7","_useState8","hoveredIndex","setHoveredIndex","handleRowHover","index","handleRowLeave","children","otherProps","_jsxs","classNames","cls","item","_jsx","includes","onMouseEnter","onMouseLeave","onTouchStart","onTouchEnd","onLoad","prevIndexes","_toConsumableArray","src","image"],"sourceRoot":""}